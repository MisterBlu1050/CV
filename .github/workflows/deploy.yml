name: Deploy to VM

on:
  push:
    branches:
      - master  # ou la branche que tu utilises

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies & build
        env:
          REACT_APP_GEMINI_API_KEY: ${{ secrets.REACT_APP_GEMINI_API_KEY }}
        run: |
          npm ci --legacy-peer-deps
          npm run build

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.VM_PATH }}

            # Injecte la clé Gemini dans l'environnement de la VM
            export REACT_APP_GEMINI_API_KEY=${{ secrets.REACT_APP_GEMINI_API_KEY }}

            # Récupère la dernière version du code
            git pull

            # Installe les dépendances sans les devDependencies
            npm ci --omit=dev --legacy-peer-deps

            # Rebuild le front en production avec la vraie clé
            npm run build

            # 1) Supprime l'ancien process PM2 s'il existe
            pm2 delete cv-app || true

            # 2) Démarre le serveur statique sur le build généré
            pm2 start serve --name cv-app -- -s build -l 3000

            # 3) Sauvegarde la configuration PM2 pour le redémarrage automatique
            pm2 save
